%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: Diagram
%%CreationDate: Tue Jul  4 08:38:18 1995
%%For: kraeutle
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 540 97
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 540 97 rectclip
[1 0 0 -1 -63 241] concat
63 144 540 97 rectclip
gsave
63 144 269 97 rectclip
gsave
1 -1 scale
gsave
63 -241 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: Diagram
%%CreationDate: Mon Jul  3 15:33:44 1995
%%For: kraeutle
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 269 97
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 269 97 rectclip
[1 0 0 -1 -270 313] concat
270 216 269 97 rectclip
gsave
270 216 269 97 rectclip
gsave
1 -1 scale
gsave
270 -313 translate
269
97
2
[1 0 0 -1 0 97]

/_NXImageStr0 _NXImageString 0 68 getinterval def {currentfile _NXImageStr0 readhexstring pop} bind 
%%BeginBinary: 13295
image
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd9
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcffffffffffffffffffffffffffffffd5
fffffffffffffd5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555557ffd5
fffffffffffffd00fffc03fc3c3ffffffffffc0ffffffffffffffffffffffc3fc3ffcffffffffffffffffff0ffffffffffffffffffffffffffff0fff3ffffffffff7ffd5
fffffffffffffdc03ffc03fc303ffffffffffc0fffffffffffffffffffffff0ff0ff3ffffffffffffffffff0ffffffffffffffffffffffffffff0fff3ffffffffff7ffc0
fffffffffffffdc03ff003fffffffffffffffc0ffffffffffcffffffffffff0ff0ff3ffffffffffffffffff0ffffffffffffffffffffffffffffc3fcfffffffffff7ffea
fffffffffffffdc00ff003ffffffffcffff3fc0f3fff0ff0003fffffffffff03f03f3f0ff303fff0c3f0c3f000ff3c3f0003fff03c000c03ffffc3fcfcf0fc003ff7ffea
fffffffffffffdcc0fcf03c0300f0000fc0c3c0003f0c3f03c0fffffffffffc3cc3cff0fcfc3fff3f3c3f0f0fcfc3f0fc3c3fffc3f0fc3f0ffffc0fcf3fc3c0ffff7ffea
fffffffffffffdcc0fcf03f03c0f00c0fc3c3c0f03c0f0f03c0fffffffffffc3cc3cff0fc003fff0ffcffff0fc3cffc3cff3fffc3f0fc3f0fffff0f3f3ff3f3ffff7ffc0
fffffffffffffdcf033f03f03c0f03f0f03c3c0f03c0f0f03c0fffffffffffc00f0cff0f0ffffff03fcffff0fc30ffc3cff3fffc3f0fc3f0fffff033c3ff0f3fc007ffc0
fffffffffffffdcf033f03f03c0f03f0f03ffc0f03c000f03c0fff00003ffff03f03ff0f0fffffff03cffff0fc30ffc3cff3fffc3f0fc3f0fffffc0fc3ff0f3fc007ffc0
fffffffffffffdcfc03f03f0fc0f03f0f03ffc0f03c0fff03c0ffffffffffff03f03ff0f0ffcffffc3c3fff0fc3c3fcfcff3fffc3f0fc3f0fffffc0ff0ff3f3ffff7ffd5
fffffffffffffdcfc0fc03f03c0f03f0f03ffc0f03c0fff03c0ffffffffffffcffc3ff0fc3f3fff3f3c3fff0fc3c3fcfcff3fffc3f0fc3f0ffffff0ff0fc3f3ffff7ffd5
fffffffffffffdcfc0fc03f03c0f03f0f00ffc0f03c0fcf03c0ffffffffffffcffcfff0fc003fff3f3f003f0fc3f0f3f03c0fffc3f0fc3f0ffffff3ffc3cfc0ffff7ffd5
fffffffffffffd0ff3fc03f0000f03c03c003c0f03f003fffffffffffffffffffffffffffcffffff3ffffffffffffffffffffffffffffffffffffffffffffffffff7ffd5
fffffffffffffd5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555557ffd5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd5
ffff55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555557ffd5
ffff7c3ffffc3ffffffffc3fffffffffc003fffffffffffffffffffffffffffffffffffffffcffffffc0ffcfc3f0fcfffc3fffcffffffff03ff3fffffffffffffff7ffd5
ffff7cffffff3ffffffffcffffffffff0fc3ffffffffffffffffffcffffffffffffffffffffcfffffff0ff0ff0f3fc3ff03ffffffffffffc3ff3fffffffffffffff7ffd5
ffff7fffffff3fffffffffffffff3fff0ff3ffffffffffffffffff0ffffffffffffffffffffcfffffff0ff0ff0c3fc3fcc3ffffffffffffc3ffffffffffffffffff7ffd5
ffff7fffffff3ffffffffffffffc3fff0fffffffffffff003f003c03f00ffff30fc3c0ff00fcc03ffff0ff0ff0c3fc3fcc3fff0fc303fffc3fcfc3f0f0c0f303fff7ffd5
ffff7c3f00ff000fc30ffc3f00f00fff03fffc03fc03fffc3f3f3f0fcfc3ffcfcfc3f0f0fc3c3c3ffff0ff0ff0c3fc3f3c3fff0fc0f0fffc000fc3f0fc33cff0fff7ffc0
ffff7c3c3c3f0f0fc0cffc3f3ffc3fffc03ff3f0f0f0fcfc3f3f3f0fcfc3ffcfc3c3f0f3fcfcff3ffff0ffc3f0f0fc3cfc3fffcfc3f0fffc3f0fc3f0fcff0ff0fff7ffff
ffff7c3c3c3f0fc3c3fffc3c3ffc3ffff00fc3f0f0f0f0fc3ffc3f0f0fffffff03c3f0f3fffcff3ffff0ffc000fc003cfc3fffcfc3f0fffc3fcfc3f0fcff0ff0f037ffff
ffff7c3ffc3f3fc3c3fffc3f03fc3fffff03c3ffffc0fc3cff0f0f0f0ffffff3c3c3f0f3fffcff3ffff0fffff3fffc300003ffcfc3f0fffc3fffc3f0fcff0ff0c007ffff
ffff7c3f0f3f0fc3c3fffc3fc0fc3fffffc0c3fffcf0fc03ff3f3f0f0fffffcfc3c3f0f0fffcff0ffff0ffffc3fff0fffc3fffcfc3f0fffc3ffcc3f0fcff0ff0fff7ffc1
ffff7c3c3f3f3fc3c3fffc3ff03c3ffcfff0c3fff0f0fffffc3f0f0fc3fcff0fc3c3f0f0ff3cff0ffff0ffff0ffff3fffc3fffcfc3f0fffc3ffcc3f0fcffcff0fff7ffc0
ffff7c3c3c3f0fc3c3fffc3cff3c3ffc3ff0f0fff0f0fc00fc000f0cc003ff0000c000fc00fc3f0ffff0fffc3fff0ffffc3fff0fc3f0fff03fc3f0003c3fc3f3fff7ffc0
ffff7c3c000f0fc3c3fffc3c3f3c33ff0fc3f000f0c03c000f0f0fc3fc3fffc3f3fcf3ff0fffffffffffffc3fff0fffffffffffffffffffffffffcfffffffc3ffff7ffc0
ffff7c3f0f0c0f0300fff00fc0ff0ffff03ffc0ffc3cfcffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff7c3ffffffffffffffffffffffffffffffffffffff3ffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff7c3ffffffffffffffffffffffffffffffffffffff3003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff4cfffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff43fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffcf
ffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffcf
ffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffff
ffff7fffffffffffffffffffffffffffffffffffffffffffffff03fffffffffffffffffffc3fffffffffff30ffffffffffffffc3fffffffffffffffffffffff3fff7ffc0
ffff7fffffffffffc0ffffffff0ffffc0000ffffffffffffffffc3ffffffffffffffffffff3fffffffffff3cfffffffffffffff3fffffffffffffffffffffff3fff7ffc0
ffff7ffffffffffff0ffffffffcfffff0ffc3fffffffffffffffc3fffffcffcfffffffffff3ffffffffffc3ffffffffffffffff3fffffffffffffffffffffffffff7ffc0
ffff7ffffffffffff0ffffffffffffff0fff3ffffffffcffffffc3fffffcff0fffffffffff3ffffffffffc3ffffffffffffffff3fffffffffffffffffffffffffc37ffff
ffff7ffffffffffff0ffffffffffffff0ffffffffffff03c303fc3fcc3f00c03f00fc000ff3fc30fc3c0f00303c0fcfc00fc30f3f0ff00fc300ffff000300fc0f007ffc0
ffff7cc03fc03ffff0c0ffc03f0fffff0ffffc03fcc3c0fc0f0fc3f0f0fcff0fcfc3f0f0ff3f0fcfc3f0fc3fc3f0fcfcfcfc3cf3c3fcfc3c0f0ffffc3f0fc3f0fc37ffea
ffff703c3f3f3ffff03c3f3f0f0fffff03f3f3f0f3f3f0fc3fc3c3f3f0fcff0fcfc3f0fcff3f0fcfc3f0fc3fc3f0fcf3fc3c3ff33ff0fc3c3f0ffffc3f0fc3f0fcf7fff3
ffff70ff0f3f0ffff0ff0c3f0fcfffff0003c3f0f0fff0fc3fc3c3ffc0f0ff0f0ffff0fcff3fff0fc3f0fc3ff3f0f3f3fffc3ff03ff0ffff3f0ffffc3f0fc3f0fc37ffc0
ffff70ff0ffc0ffff0ff0c003fcfffff0ff3c000f03ff0fc3fc3c3fcf0fcff0f0ffff0fcff3fc3cfc3f0fc3ff0cc33f3fffc3ff00ff0fffc3f0ffffc3f0fc3f0fcf7ffc0
ffff7cff0fcf0ffff0ff0cffffcfffff0fffc3fffc03f0fc3fc3c3f3f0fcff0f0ffff0fcff3f0fcfc3f0fc3ffccc0ff0fffc3ff30ff0fffc3f0ffffc3f0fc3f0fcf7ffff
ffff70ff0f3f0ffff0ff0c3fffcfffff0fffc3ffffc0f0fc3fcfc3f3f0fcff0fc3fcf0fcff3f0fcfc3f0fc3ffc3f0ff0ff3c3ff3c3f03f3f3f0ffffc3f0fc3f0fc37fff0
ffff70ff3c3f0ffff0ff3c3fcfcfffff0fffc0fcf3f0f0cc0f0fc3f0003c3f0cc003f0fc3c0f0003c000fc3ffc3f3ffc00fc3fc3f0fc00fc3f0ffffc3f0fc3f0fc07ffc0
ffff703c3c000ffff0fcff003f03ffff0ffff000f3f3f03c30ffcffc3cfc3fcffc3fccf03f0fc3cffcfff03fffffffff0fffffffffffcfffffffffffffffffffff37ffff
ffff70c3ff0f0fffff03ffc0ff03fffc03fffc0fff0ffcfc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff70fffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff70fffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffe0
ffff70fffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff703ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffcf
ffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffff
ffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffc0
ffff7fffffffffffffffffffffffffffffffffffffffffff03ffff03fffffffc0ffffffffffffffffffffff0f03ffffffffffffffff03fffffc03ff03ffffffffff7ffff
ffff7f00ffff0ffff0003fffffffffffffffffffffffffffc0fffc0fffffffff0ffffffffffffffffffffff3fc3ffffffffffffffffc3ffffff0fffcfffffffffff7ffc0
ffff7c003ff0fffffc3f0fffffffffffffffffffffffffffc0fffc0fffffffff0ffff3ffffffffffcffffffffc3ffffffffffffffffc3ffffff0fffcfffffffffff7ffc0
ffff73fc3fc3fffffc3fc3fffffffffffffffffffffcffffc03ff30fffffffff0fffc3ffffffffff0ffffffffc3ffffffffffffffffc3ffffff0fffcfffffffffff7ffff
ffff7ffc3f0ffffffc3fc3fffffffffffffffffffff0ffffcc3ff30ff00ff3030f03003c03fc303c00f003f0fc3fffc303fc00ff00fc303ffff0fffcfc303c0ffff7ffc0
ffff7ffc3f0ffffffc3fc3cc0f00ff0003f00fc303f00fffcf0fcf0fc3c3c0cf0f3fc3f0f0fc3f3f0fc3c3f0fc3fffc0f0f0fcfcfc3c0f0ffff0fffcfc0f03c3fff7ffc0
ffff7ffc3c000ffffc3f03030c3f0f3f0fcfc3c0f0f0ffffcf0fcf0fc3c3f0ff0cffc3f0fcfc3f0f0fcff0f0fc3fffc3f0fcfcf0ff3c3f0ffff0fffcfc3f0fc3fff7ffe0
ffff7ffcfc3fc3fffc000fc3fcff0ffc3f0fc3c3f0f0ffffcf03cf0fff03f3ff03ffc3fff0fc3f0f0fc3fff0fc3fffc3f0fff0f0fffc3f0ffff0fffcfc3f0fc3fff7ffff
ffff7ff3fc3fc3fffc3fffcff0ffcffc3f0003c3f0f0ffffcfc33f0ff0c3f3ff00ffc3fc3cfc3f0f0fcffff0fc3fffc3f0fc3cf0fffc3f0ffff0fffcfc3f0fc3c007ffff
ffff7fcffc3ff3fffc3fffcff0ffc3f0ff3fffc3f0f0ffffcfc03f0fc3c3f3ff0c3fc3f0fcfc3f0f0fcffff0fc3fffc3f0f0fcf0fffc3f0ffff0fffcfc3f0fc3fff7ffcf
ffff7f3ffc3ff3fffc3fffcff0ffcfc3ff0fffc3f0f0ffffcff0ff0fc3c3f3ff0f0fc3f0f0fc3f0f0fc3fcf0fc3fffc3f0f0fcf03f3c3f0ffffc3ff3fc3f0fc3fff7ffff
ffff7cffcf3fc3fffc3fffcffc3f0fc3f30ff3c3f0f0ffffc3f0ff0fc303f0ff0f03c3f0c03c3f0f0cc003f0fc3fffc3f0f0003c00fc3f0ffffc0fc3fc3f0fc3fff7ffc0
ffff7c000f0fc3fffc3fffc3fc3f3f0ff3c00fc3f0f0ffff00fff003c0f0c0fc0300f0fc3c300c0fc3fc0fc0300fffc0f03c3c3f03fc0f03ffffc03ffc0f03c0fff7ffcf
ffff55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555557ffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
%%EndBinary
grestore
grestore
grestore
%%Trailer

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
gsave
342 171 261 59 rectclip
gsave
1 -1 scale
gsave
342 -230 translate
261
59
2
[1 0 0 -1 0 59]

/_NXImageStr0 _NXImageString 0 3894 getinterval def {currentfile _NXImageStr0 readhexstring pop} bind 
%%BeginBinary: 7825
image
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffc0fffd555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555fffc0fffdfffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffc3fffffffffffffffffff
ff3fffff00003fff0fffffffffffffcfffffffffffdfffe8fffdffffffffffffffffffffffffffffffffffffffffc00003fffffffffffffc3ffffffffffffffffffffc3fffff000003ff0fffffffffffff0fffffffffffdfffc0fffdffffffffffffffffffffffffffffffffffffffff03ffc0fffffffffffffc3fffffff
fffffffffffffc3fffff0fffc0ff0fffffffffffff0fffffffffffdffffffffdfffffffffffffffffffffffffffffffffffffffc0ffffc3ffffffffffffc3ffffffffffffffffffffc3fffff0ffff03fffffffffffffff0fffffffffffdfffc0fffdfffffffffffffffffffffffffffffffffffffffc3ffffc3fffffffff
fffc3ffffffffffffffffffffc3fffff0ffffc3fffffffffffffff0fffffffffffdfffc0fffdfffffffffffffffffffffffffffffffffffffff03fffff3fff000ffc303c3000fffc003ff0c0ff000c3fffff0ffffc3f0ffc003fffc0030fff000ffc301fffc0fffd0003fc3fffffcffffffcfff3fc3ffffffffffff0ffff
fffff00003fc003c00003fc0000ff000fc00003fffff0ffff03f0ff00003ff00000ffc0003fc001fffc0fffd3fc0fcffffffcffffffcff03f0fffffffffffff0fffffffff0ffc3fc0ffc0ffc3fc3ff0ff00ff03ff03fffff0ffff0ff0ff0ffc3fc0ffc0ff0ffc0fc0fdfffc0fffd3ffc3fffffffcffffffcff0ff0ffffff
fffffff0ffffffffc3fff0fc0ffc3ffc3fc3ffc3f03ff0fffc3fffff000003ff0fc3fff0fc3fff0fc3fff0fc0fdfffc0fffd3ffc3cfcc03fcffffffc303fc03000c03ffffff0fff0000fc3fff0fc3ffc3ffc3fffffc3f0ffc0fffc3fffff000003ff0fc3fff0f0ffff0fc3fff0fc3fdfffc0fffd3fff3c3c0f0fcffffffc
00fff0f03c0f0ffffff0ffff000fc00000fc3ffc3fff3fffc003f0ffc3fffc3fffff0fff03ff0f000000f0ffff0fc0c000fc3fdfffc0fffd3fff3c3c3fc3cffffffc00fff0f0ff3fcffffff0ffffff0fc00000fc3ffc3fff3ff00003f0ffc3fffc3fffff0ffff0ff0f000000f0ffff0fc00000fc3fdfffc0fffd3fff3c3c
fff3cffffffc003ff0f0ff3fcffffff0ffffff0fc3fffffc3ffc3ffc3fc0ffc3f0ffc3fffc3fffff0ffff0ff0f03fffff0ffff0fc3fffffc3fdfffc0fffd3fff3c3cfff3cfffc03c3c3ff0f0ff3fcffffffc3ffffc0fc3fffffc3ffc3ffc3f0fffc3f0fff0fffc3fffff0ffff0ff0fc3fffff0ffff0fc3fffffc3fdfffc0
fffd3ffc3c3cfff3c3fffffc3f0ff0f0ff3fcffffffc0ffffc0fc3fff0fc3ffc3fff3f0fffc3f0fff0fffc3fffff0ffff0ff0fc3fff0fc3fff0fc3fff0fc3fdfffc0fffd3ffc3c3c3fc3c3fffffc3fc3f0f0ff3fcfffffff03fff00ff0ffc0fc3ffc3fff3f0fff03f0fff03ff03fffff0ffff0ff0fc0ffc3fc3ffc0ff0ff
f0fc3fdfffc0fffd3fc0fc3c0f03c3c3fffc3ff0f0f0ff3fcfcfffff003c000ff00f03fc3ffc3fff3f00f003f0fffc0fc03fffff0ffff0ff0ff03f03ff03f00ff00f03fc3fdfffc0fffd0003fc3c000fcfc3fffcfffcf0f0ff3fcfcffffff0000f0ffc000ffc3ffc3fff3fc000c0f0ffff000f3fffff0ffffc3f0ffc000f
ffc0030ffc000ffc3fdfffc0fffdfffffffcffffffffffffffffffffffffffffffffffc3fffffff3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffc0fffdfffffffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffdfffc0fffdfffffffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffc0fffd55555555555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555555555555555fffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0fff555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555557fffffc0fff4ffc3fc30ffffffffffffffc3ffffffff03cffffffffffffffcc3fc3fffffffffffffff0303f3ffffffffffffffffff3ffffffffffffffff3ffffffff7fffffc0fff4ff03fc3ffffc3fffffff
ffc3ffffffff0fcffffffffffffffcc3fcfffffffffffffffc3ff3f3ffffffffffffffffff3ffffffffffffffff3ffffffff7fffffc0fff43f03fcfffffc3ff0fffc3fc30fffc3ff0f03fc3fffc3fff3fffff0fff0fffcfffffffc3ff0f0ffc3ffffffff3fffcf3c3fffcffff3fc3ff0ffc3ffff7fffffc0fff43f30f0f0
f0000f000fc003c000fc003c0300c003c0003f00cffcf03f003f00ffffffff3fffc03c003f3fc3f003f00f0003fc00fc03c003c03c003f007fffffc0fff73c30f0f0f0fc3f3f0f0fc3c0fcfcff3f0fcfc3f3c0fc3c0fcffcfcfc3f0f03ffffffff00fff3fcff3c3fc3c3f0f0ff0ff3f0fc3c3fcff3f0fcff3f0f7fffffc0
fff73c3cf3f0f3fc3f3fcf3ff3c3fc3cff0f0fcfc3ffc3ff0c3fcffcfcfcffcf0ffffcfffff003f3f0ff0c3fc3cffcf0ff3ff0f3ff3c3fcff3f3f0ff0f3f7fffffc0fff70cfcf3f0f3fc3f00ff3fffc3fc3fc00f0fcfc03fc3ff0c3fcffcfcf0000f0ffffcffffffc0f3f0000c3fc30000f0ff3ff0c0003cfffc03f3f000
0f3f7fffffc0fff70cfc03f0f3fc3fc00f3fffc3fc3c000f0fcffc03c3ff0f3fcffcfcf0000f0ffffffffffff0f3f0000c3fc30000f3ff3ffcc0003cffc000f3f0000f3f7fffffc0fff7c0fc03f0f3ff3fffcf3ff3c3fc30ff0f0fcffff0c3ff0c3fcffcfcfcffff0ffffffffc3ffcf3f0fffc3fc30ffff3ff3ff0c3fffc
ff0ff0f3f0ffff3f7fffffc0fff7c0ff0ff0f3ff3f3fc30ff0c3fc30ff0f0fcfcff0c0ff3f3fc3f0fcfc3fcf0ffffffffc3ff0f3f0ff0f3fc3cffcf3ff0ff0f3ff3cff0ff0f3f0ff0f3f7fffffc0fff7c3ff0ff0f3ff3f000fc303c3fcf0300f0fc3c003c0303f3fc000fcfc0c0f3fffffffff0303f0fc003f0c03c0c0f3
ff0003f0303cff0300f0fc3c3f3f7fffffc0fff7f3ff0ff3f3ff0fc03ff00ffffffc03cfffc0f00fc303fffff00cffffc0ffffffffffffc00ffc3f00ffc0fffc0fffff300fff03fcfff03cfc3f00ffff7fffffc0fff7ffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff7fffffc0fff7ffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffc0fff7ffffffffffffffffffffffffffffffffffffffffc3ffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffc0fff5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555ffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
%%EndBinary
grestore
grestore
grestore
%%Trailer
