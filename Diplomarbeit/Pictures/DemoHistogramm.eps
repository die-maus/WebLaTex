%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: Diagram
%%CreationDate: Tue Jun 27 13:12:39 1995
%%For: kraeutle
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 479 206
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 479 206 rectclip
[1 0 0 -1 -32 227] concat
32 21 479 206 rectclip
gsave
276 21 235 206 rectclip
gsave
1 -1 scale
gsave
276 -227 translate
-43 -466 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: PresentationBuilder
%%CreationDate: Thu Jan 28 09:36:13 1993
%%For: bohn
%%DocumentFonts: (atend)
%%Pages: 0 1
%%BoundingBox: 43 466 278 672
%%EndComments

%%BeginDocument: /usr/lib/NextStep/printPackage.ps
%!PS-Adobe-2.0
%%Title: Printing Package
%%EndComments
%Version: 2.0
%Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/setcmykcolor{
	1.0 exch sub dup dup 6 -1 roll
	sub dup 0 lt{pop 0}if 5 1 roll
	4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll
	exch sub dup 0 lt{pop 0}if setrgbcolor
}__NXbdef
/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def   
/_NXfstr 128 string dup 0 (_NX) putinterval def   
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {//findfont exec}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {//findfont exec dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXProcArray 5 array __NXdef
/_NXChannels 0 __NXdef
/_NXTotalBytes 0 __NXdef
/_NXDoImageOp{
	1 index{dup}{1}ifelse /_NXChannels exch store
	_NXChannels 2 add 2 roll _NXProcArray 0 _NXChannels getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /_NXTotalBytes exch store pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{	0 1 _NXChannels 1 sub{
			_NXProcArray exch get exec
			length _NXTotalBytes exch sub /_NXTotalBytes exch store}for
		_NXTotalBytes 0 le{exit}if
	}loop /_NXProcArray 5 array def
}__NXbdef
/colorimage{_NXDoImageOp}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
%%EndDocument

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/drawwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave fill grestore gsave setgray stroke grestore
} bind def [[] [4] [2] [2 2 4 4]] /dasharray exch def /elp {
    translate scale newpath 0 exch 0 exch 0 360 arc
} bind def /c {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
} bind def /frc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore
} bind def /ffrc {
    gsave /lg exch def 4 copy c gsave lg setgray translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore grestore
} bind def /ffrr {
    gsave /lg exch def 4 copy gsave rectfill grestore lg setgray rectstroke grestore
} bind def /ffrr3d {
    gsave /sgray exch def /egray exch def /lg exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy rectfill -1 -1 translate
    } for egray setgray 4 copy rectfill lg setgray rectstroke grestore
} bind def /fr3d {
    gsave /sgray exch def /egray exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy gsave rectfill grestore -1 -1 translate
    } for grestore
} bind def /l {
    moveto lineto stroke
} bind def /arrow {
    /t_y2 exch def /t_x2 exch def /t_y1 exch def /t_x1 exch def t_y2 t_y1 sub t_x2 t_x1 sub atan /t_deg exch def currentlinewidth 1 gt {
        /t_sc currentlinewidth def
    } {
        /t_sc 1 def
    } ifelse t_x2 t_y2 moveto t_deg rotate t_sc dup scale -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath 1 t_sc div dup scale t_deg neg rotate t_x1 t_y1 currentpoint fill
} bind def /pline {
    /yarray exch def /xarray exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for fill
} bind def /ffrpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave fill grestore lg setgray stroke
} bind def /frpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave lg setgray stroke grestore
} bind def /colorfrpline {
    /yarray exch def /xarray exch def gsave setrgbcolor newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for stroke grestore
} bind def /frpline3d {
    /sgray exch def /egray exch def /yarray exch def /xarray exch def newpath gsave 7 -7 translate sgray egray sgray sub 7 div egray {
        setgray xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
            dup xarray exch get exch yarray exch get lineto
        } for stroke -1 1 translate
    } for grestore
} bind def /arrowhead {
    gsave currentpoint 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 gt {
        dup scale
    } {
        pop
    } ifelse -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath fill grestore newpath
} bind def /rl^ {
    currentlinewidth currentpoint 5 3 roll rlineto currentpoint stroke moveto arrowhead
} bind def /rl2^ {
    /h exch def /w exch def currentpoint /prevy exch def /prevx exch def w h rl^ prevx w add prevy h add moveto w -1 mul h -1 mul currentlinewidth currentpoint 5 3 roll rmoveto currentpoint moveto arrowhead
} bind def /setup {
    setgray dasharray exch get 0 setdash setlinewidth setlinecap setlinejoin gsave
} bind def /setup1 {
    setgray dasharray exch get 0 setdash setlinewidth gsave
} bind def /setup2 {
    setgray dasharray exch get 0 setdash setlinewidth
} bind def /rshow {
    /st exch def /ang exch def gsave currentpoint translate ang rotate currentpoint -1 mul -1 mul exch translate st show grestore
} bind def /rcshow {
    /st exch def /ang exch def gsave currentpoint exch st stringwidth pop add exch translate ang rotate currentpoint exch st stringwidth pop add exch -1 mul -1 mul exch translate st show grestore
} bind def /sbox {
    /ingray exch def /lgray exch def gsave 4 copy 5 -5 translate lgray setgray rectfill grestore ingray setgray 4 copy rectfill gsave lgray setgray rectstroke grestore
} bind def
/definepattern {
    7 dict begin /FontDict 9 dict def FontDict begin /cache exch def /key exch def /proc exch cvx def /mtx exch matrix invertmatrix def /height exch def /width exch def /ctm matrix currentmatrix def /ptm matrix identmatrix def /str (12345678901234567890123456789012) def end /FontBBox [ 0 0 FontDict /width get FontDict /height get ] def /FontMatrix FontDict /mtx get def /Encoding StandardEncoding def /FontType 3 def /BuildChar {
        pop begin FontDict begin width 0 cache {
            0 0 width height setcachedevice
        } {
            setcharwidth
        } ifelse 0 0 moveto width 0 lineto width height lineto 0 height lineto closepath clip newpath gsave proc grestore end end
    } def FontDict /key get currentdict definefont end
} bind def /patternpath {
    dup type /dicttype eq {
        begin FontDict /ctm get setmatrix
    } {
        exch begin FontDict /ctm get setmatrix concat
    } ifelse currentdict setfont FontDict begin FontMatrix concat width 0 dtransform round width div exch round width div exch 0 height dtransform round height div exch round height div exch 0 0 transform round exch round exch ptm astore setmatrix pathbbox height div ceiling height mul 4 1 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1 roll width div floor width mul 4 1 roll 2 index sub height div ceiling cvi exch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptm invertmatrix pop {
        gsave ptm concat dup str length idiv {
            str show
        } repeat dup str length mod str exch 0 exch getinterval show grestore 0 height rmoveto
    } repeat pop end end
} bind def /patternfill {
    gsave clip patternpath grestore newpath
} bind def /setpat {
    patternarray exch get findfont
} bind def /patrect {
    gsave moveto dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath setpat gsave 1 setgray fill grestore patternfill grestore
} bind def /patcirc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc gsave 1 setgray fill grestore 0 setgray setpat patternfill grestore
} bind def /patpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patpline3D {
    gsave /yarray exch def /xarray exch def /patnum exch def /gr exch def xarray 0 get yarray 0 get moveto 1 1 3 {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave gr 0 eq {
        1 setgray
    } {
        0.8 setgray
    } ifelse fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setgray stroke grestore
} bind def /colorpatfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setrgbcolor stroke grestore
} bind def /drawpatwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave 1 setgray fill grestore gsave 0 setgray setpat patternfill grestore setgray stroke
} bind def 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /RightDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightRightDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LeftDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightLeftDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /Horiz true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /LightHoriz true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /Vert true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightVert true definepattern pop 30 30 [ 200 36 div 0 0 200 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch true definepattern pop 30 30 [ 400 36 div 0 0 400 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch2 true definepattern pop [/RightDiag /LightRightDiag /LeftDiag /LightLeftDiag /Vert /LightVert /Horiz /LightHoriz /Crosshatch /Crosshatch2] /patternarray exch def
%%EndSetup
0 0 278 672 rectclip
43 466 235 206 rectclip
43 466 235 206 rectclip
0 0 0.666667 setup2
gsave
0.666667 setgray
48 471 225 196 rectfill
gsave 0.333333 setgray 48 471 225 196 rectstroke grestore
0.333333 setgray
53 466 225 5 rectfill
273 466 5 196 rectfill
grestore
1 0 1 setup2
1 setgray
85 493 183 159 rectfill
gsave 0.666667 setgray 85 493 183 159 rectstroke grestore
gsave
85 493 183 159 rectclip
0 0 0 setup2
0 0 0 setup2
0 setgray
gsave
newpath
systemdict
begin
-1000 -10000 10000 100000 setbbox
85 508.899994 moveto
183 0 rlineto
85 524.799988 moveto
183 0 rlineto
85 540.700012 moveto
183 0 rlineto
85 556.599976 moveto
183 0 rlineto
85 572.5 moveto
183 0 rlineto
85 588.400024 moveto
183 0 rlineto
85 604.299988 moveto
183 0 rlineto
85 620.200012 moveto
183 0 rlineto
85 636.099976 moveto
183 0 rlineto
end
stroke
grestore
0.25 0 0 setup2
0.25 0 0 setup2
0.25 0 0 setup2
0 setgray
[105.350861 493 5.048276 59.14801] rectfill
0 setgray
[105.350861 493 5.048276 59.14801] rectstroke
0 setgray
0 setgray
[203.386566 493 5.048276 134.514038] rectfill
0 setgray
[203.386566 493 5.048276 134.514038] rectstroke
0 setgray
0 setgray
[255.672287 493 5.048276 53.106018] rectfill
0 setgray
[255.672287 493 5.048276 53.106018] rectstroke
0 setgray
grestore
0 0 1 setup2
0 setgray
gsave 85 493 85 183 add 493 0 add l grestore
0 setgray
0 setlinewidth
0 0 1 setup2
0 0 1 setup2
gsave
73 471 29 22 rectclip
gsave
[1 0 0 -1 78 488] concat
/Helvetica findfont 9 scalefont [1 0 0 -1 0 0] makefont
73
exch
defineuserobject
73 execuserobject setfont
0 setgray
6 9 moveto (1) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
92 471 30 22 rectclip
gsave
[1 0 0 -1 97 488] concat
73 execuserobject setfont
0 setgray
7 9 moveto (4) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
112 471 29 22 rectclip
gsave
[1 0 0 -1 117 488] concat
73 execuserobject setfont
0 setgray
6 9 moveto (7) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
131 471 31 22 rectclip
gsave
[1 0 0 -1 136 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (10) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
151 471 31 22 rectclip
gsave
[1 0 0 -1 156 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (13) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
170 471 31 22 rectclip
gsave
[1 0 0 -1 175 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (16) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
190 471 31 22 rectclip
gsave
[1 0 0 -1 195 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (19) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
210 471 31 22 rectclip
gsave
[1 0 0 -1 215 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (22) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
229 471 31 22 rectclip
gsave
[1 0 0 -1 234 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (25) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
249 471 24 22 rectclip
gsave
[1 0 0 -1 254 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (28) show
grestore
grestore
0 setgray
0 0 1 setup2
0 setgray
gsave 85 493 85 0 add 493 159 add l grestore
/Helvetica 9 selectfont
0 setgray
0 0 1 setup2
0 0 1 setup2
gsave
63 482 21 22 rectclip
gsave
[1 0 0 -1 68 499] concat
73 execuserobject setfont
0 setgray
2 9 moveto (0) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
58 497 26 22 rectclip
gsave
[1 0 0 -1 63 514] concat
73 execuserobject setfont
0 setgray
2 9 moveto (50) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
53 513 31 22 rectclip
gsave
[1 0 0 -1 58 530] concat
73 execuserobject setfont
0 setgray
2 9 moveto (100) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
53 529 31 22 rectclip
gsave
[1 0 0 -1 58 546] concat
73 execuserobject setfont
0 setgray
2 9 moveto (150) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
53 545 31 22 rectclip
gsave
[1 0 0 -1 58 562] concat
73 execuserobject setfont
0 setgray
2 9 moveto (200) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
53 561 31 22 rectclip
gsave
[1 0 0 -1 58 578] concat
73 execuserobject setfont
0 setgray
2 9 moveto (250) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
53 577 31 22 rectclip
gsave
[1 0 0 -1 58 594] concat
73 execuserobject setfont
0 setgray
2 9 moveto (300) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
53 593 31 22 rectclip
gsave
[1 0 0 -1 58 610] concat
73 execuserobject setfont
0 setgray
2 9 moveto (350) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
52 609 32 22 rectclip
gsave
[1 0 0 -1 57 626] concat
73 execuserobject setfont
0 setgray
2 9 moveto (400) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
52 625 32 22 rectclip
gsave
[1 0 0 -1 57 642] concat
73 execuserobject setfont
0 setgray
2 9 moveto (450) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
53 641 31 22 rectclip
gsave
[1 0 0 -1 58 658] concat
73 execuserobject setfont
0 setgray
2 9 moveto (500) show
grestore
grestore
0 setgray
0 setlinewidth
gsave
newpath
systemdict
begin
-1000 -1000 10000 10000 setbbox
80 493 moveto
5 0 rlineto
80 508.899994 moveto
5 0 rlineto
80 524.799988 moveto
5 0 rlineto
80 540.700012 moveto
5 0 rlineto
80 556.599976 moveto
5 0 rlineto
80 572.5 moveto
5 0 rlineto
80 588.400024 moveto
5 0 rlineto
80 604.299988 moveto
5 0 rlineto
80 620.200012 moveto
5 0 rlineto
80 636.099976 moveto
5 0 rlineto
80 652 moveto
5 0 rlineto
end
stroke
grestore
0 setgray
gsave
0 0 278 672 rectclip
[1 0 0 -1 0 672] concat
0.333333 setgray
grestore
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
gsave
32 21 235 206 rectclip
gsave
1 -1 scale
gsave
32 -227 translate
-43 -466 translate

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: PresentationBuilder
%%CreationDate: Thu Jan 28 09:33:26 1993
%%For: bohn
%%DocumentFonts: (atend)
%%Pages: 0 1
%%BoundingBox: 43 466 278 672
%%EndComments

%%BeginDocument: /usr/lib/NextStep/printPackage.ps
%!PS-Adobe-2.0
%%Title: Printing Package
%%EndComments
%Version: 2.0
%Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/setcmykcolor{
	1.0 exch sub dup dup 6 -1 roll
	sub dup 0 lt{pop 0}if 5 1 roll
	4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll
	exch sub dup 0 lt{pop 0}if setrgbcolor
}__NXbdef
/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def   
/_NXfstr 128 string dup 0 (_NX) putinterval def   
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {//findfont exec}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {//findfont exec dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXProcArray 5 array __NXdef
/_NXChannels 0 __NXdef
/_NXTotalBytes 0 __NXdef
/_NXDoImageOp{
	1 index{dup}{1}ifelse /_NXChannels exch store
	_NXChannels 2 add 2 roll _NXProcArray 0 _NXChannels getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /_NXTotalBytes exch store pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{	0 1 _NXChannels 1 sub{
			_NXProcArray exch get exec
			length _NXTotalBytes exch sub /_NXTotalBytes exch store}for
		_NXTotalBytes 0 le{exit}if
	}loop /_NXProcArray 5 array def
}__NXbdef
/colorimage{_NXDoImageOp}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
%%EndDocument

gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/drawwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave fill grestore gsave setgray stroke grestore
} bind def [[] [4] [2] [2 2 4 4]] /dasharray exch def /elp {
    translate scale newpath 0 exch 0 exch 0 360 arc
} bind def /c {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
} bind def /frc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore
} bind def /ffrc {
    gsave /lg exch def 4 copy c gsave lg setgray translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore grestore
} bind def /ffrr {
    gsave /lg exch def 4 copy gsave rectfill grestore lg setgray rectstroke grestore
} bind def /ffrr3d {
    gsave /sgray exch def /egray exch def /lg exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy rectfill -1 -1 translate
    } for egray setgray 4 copy rectfill lg setgray rectstroke grestore
} bind def /fr3d {
    gsave /sgray exch def /egray exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy gsave rectfill grestore -1 -1 translate
    } for grestore
} bind def /l {
    moveto lineto stroke
} bind def /arrow {
    /t_y2 exch def /t_x2 exch def /t_y1 exch def /t_x1 exch def t_y2 t_y1 sub t_x2 t_x1 sub atan /t_deg exch def currentlinewidth 1 gt {
        /t_sc currentlinewidth def
    } {
        /t_sc 1 def
    } ifelse t_x2 t_y2 moveto t_deg rotate t_sc dup scale -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath 1 t_sc div dup scale t_deg neg rotate t_x1 t_y1 currentpoint fill
} bind def /pline {
    /yarray exch def /xarray exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for fill
} bind def /ffrpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave fill grestore lg setgray stroke
} bind def /frpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave lg setgray stroke grestore
} bind def /colorfrpline {
    /yarray exch def /xarray exch def gsave setrgbcolor newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for stroke grestore
} bind def /frpline3d {
    /sgray exch def /egray exch def /yarray exch def /xarray exch def newpath gsave 7 -7 translate sgray egray sgray sub 7 div egray {
        setgray xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
            dup xarray exch get exch yarray exch get lineto
        } for stroke -1 1 translate
    } for grestore
} bind def /arrowhead {
    gsave currentpoint 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 gt {
        dup scale
    } {
        pop
    } ifelse -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath fill grestore newpath
} bind def /rl^ {
    currentlinewidth currentpoint 5 3 roll rlineto currentpoint stroke moveto arrowhead
} bind def /rl2^ {
    /h exch def /w exch def currentpoint /prevy exch def /prevx exch def w h rl^ prevx w add prevy h add moveto w -1 mul h -1 mul currentlinewidth currentpoint 5 3 roll rmoveto currentpoint moveto arrowhead
} bind def /setup {
    setgray dasharray exch get 0 setdash setlinewidth setlinecap setlinejoin gsave
} bind def /setup1 {
    setgray dasharray exch get 0 setdash setlinewidth gsave
} bind def /setup2 {
    setgray dasharray exch get 0 setdash setlinewidth
} bind def /rshow {
    /st exch def /ang exch def gsave currentpoint translate ang rotate currentpoint -1 mul -1 mul exch translate st show grestore
} bind def /rcshow {
    /st exch def /ang exch def gsave currentpoint exch st stringwidth pop add exch translate ang rotate currentpoint exch st stringwidth pop add exch -1 mul -1 mul exch translate st show grestore
} bind def /sbox {
    /ingray exch def /lgray exch def gsave 4 copy 5 -5 translate lgray setgray rectfill grestore ingray setgray 4 copy rectfill gsave lgray setgray rectstroke grestore
} bind def
/definepattern {
    7 dict begin /FontDict 9 dict def FontDict begin /cache exch def /key exch def /proc exch cvx def /mtx exch matrix invertmatrix def /height exch def /width exch def /ctm matrix currentmatrix def /ptm matrix identmatrix def /str (12345678901234567890123456789012) def end /FontBBox [ 0 0 FontDict /width get FontDict /height get ] def /FontMatrix FontDict /mtx get def /Encoding StandardEncoding def /FontType 3 def /BuildChar {
        pop begin FontDict begin width 0 cache {
            0 0 width height setcachedevice
        } {
            setcharwidth
        } ifelse 0 0 moveto width 0 lineto width height lineto 0 height lineto closepath clip newpath gsave proc grestore end end
    } def FontDict /key get currentdict definefont end
} bind def /patternpath {
    dup type /dicttype eq {
        begin FontDict /ctm get setmatrix
    } {
        exch begin FontDict /ctm get setmatrix concat
    } ifelse currentdict setfont FontDict begin FontMatrix concat width 0 dtransform round width div exch round width div exch 0 height dtransform round height div exch round height div exch 0 0 transform round exch round exch ptm astore setmatrix pathbbox height div ceiling height mul 4 1 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1 roll width div floor width mul 4 1 roll 2 index sub height div ceiling cvi exch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptm invertmatrix pop {
        gsave ptm concat dup str length idiv {
            str show
        } repeat dup str length mod str exch 0 exch getinterval show grestore 0 height rmoveto
    } repeat pop end end
} bind def /patternfill {
    gsave clip patternpath grestore newpath
} bind def /setpat {
    patternarray exch get findfont
} bind def /patrect {
    gsave moveto dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath setpat gsave 1 setgray fill grestore patternfill grestore
} bind def /patcirc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc gsave 1 setgray fill grestore 0 setgray setpat patternfill grestore
} bind def /patpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patpline3D {
    gsave /yarray exch def /xarray exch def /patnum exch def /gr exch def xarray 0 get yarray 0 get moveto 1 1 3 {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave gr 0 eq {
        1 setgray
    } {
        0.8 setgray
    } ifelse fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setgray stroke grestore
} bind def /colorpatfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setrgbcolor stroke grestore
} bind def /drawpatwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave 1 setgray fill grestore gsave 0 setgray setpat patternfill grestore setgray stroke
} bind def 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /RightDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightRightDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LeftDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightLeftDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /Horiz true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /LightHoriz true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /Vert true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightVert true definepattern pop 30 30 [ 200 36 div 0 0 200 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch true definepattern pop 30 30 [ 400 36 div 0 0 400 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch2 true definepattern pop [/RightDiag /LightRightDiag /LeftDiag /LightLeftDiag /Vert /LightVert /Horiz /LightHoriz /Crosshatch /Crosshatch2] /patternarray exch def
%%EndSetup
0 0 278 672 rectclip
43 466 235 206 rectclip
43 466 235 206 rectclip
0 0 0.666667 setup2
gsave
0.666667 setgray
48 471 225 196 rectfill
gsave 0.333333 setgray 48 471 225 196 rectstroke grestore
0.333333 setgray
53 466 225 5 rectfill
273 466 5 196 rectfill
grestore
1 0 1 setup2
1 setgray
84 493 184 159 rectfill
gsave 0.666667 setgray 84 493 184 159 rectstroke grestore
gsave
84 493 184 159 rectclip
0 0 0 setup2
0 0 0 setup2
0 setgray
gsave
newpath
systemdict
begin
-1000 -10000 10000 100000 setbbox
84 524.799988 moveto
184 0 rlineto
84 556.599976 moveto
184 0 rlineto
84 588.400024 moveto
184 0 rlineto
84 620.200012 moveto
184 0 rlineto
end
stroke
grestore
0.25 0 0 setup2
0.25 0 0 setup2
0.25 0 0 setup2
0 setgray
[84.74778 493 5.075862 22.895996 91.319214 493 5.075862 10.175995 97.89064 493 5.075862 12.720001 104.462067 493 5.075862 27.984009 111.033501 493 5.075862 30.528015 117.604927 493 5.075862 5.723999] rectfill
0 setgray
[84.74778 493 5.075862 22.895996 91.319214 493 5.075862 10.175995 97.89064 493 5.075862 12.720001 104.462067 493 5.075862 27.984009 111.033501 493 5.075862 30.528015 117.604927 493 5.075862 5.723999] rectstroke
0 setgray
0 setgray
[130.747787 493 5.075862 0.635986 137.319214 493 5.075862 4.451996 143.89064 493 5.075862 0.635986 150.462067 493 5.075862 1.272003] rectfill
0 setgray
[130.747787 493 5.075862 0.635986 137.319214 493 5.075862 4.451996 143.89064 493 5.075862 0.635986 150.462067 493 5.075862 1.272003] rectstroke
0 setgray
0 setgray
[163.604935 493 5.075862 1.272003 170.176361 493 5.075862 0.635986 176.747787 493 5.075862 1.272003] rectfill
0 setgray
[163.604935 493 5.075862 1.272003 170.176361 493 5.075862 0.635986 176.747787 493 5.075862 1.272003] rectstroke
0 setgray
0 setgray
[189.89064 493 5.075862 0.635986 196.462067 493 5.075862 19.080017 203.033508 493 5.075862 148.187988 209.604935 493 5.075862 91.583984 216.176361 493 5.075862 5.723999] rectfill
0 setgray
[189.89064 493 5.075862 0.635986 196.462067 493 5.075862 19.080017 203.033508 493 5.075862 148.187988 209.604935 493 5.075862 91.583984 216.176361 493 5.075862 5.723999] rectstroke
0 setgray
0 setgray
[229.319214 493 5.075862 1.90799 235.89064 493 5.075862 13.355988 242.462067 493 5.075862 8.268005 249.033508 493 5.075862 18.444 255.604935 493 5.075862 55.332031 262.176361 493 5.075862 10.812012] rectfill
0 setgray
[229.319214 493 5.075862 1.90799 235.89064 493 5.075862 13.355988 242.462067 493 5.075862 8.268005 249.033508 493 5.075862 18.444 255.604935 493 5.075862 55.332031 262.176361 493 5.075862 10.812012] rectstroke
grestore
0 0 1 setup2
0 setgray
gsave 84 493 84 184 add 493 0 add l grestore
0 setgray
0 setlinewidth
0 0 1 setup2
0 0 1 setup2
gsave
72 471 29 22 rectclip
gsave
[1 0 0 -1 77 488] concat
/Helvetica findfont 9 scalefont [1 0 0 -1 0 0] makefont
73
exch
defineuserobject
73 execuserobject setfont
0 setgray
6 9 moveto (1) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
92 471 30 22 rectclip
gsave
[1 0 0 -1 97 488] concat
73 execuserobject setfont
0 setgray
7 9 moveto (4) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
112 471 29 22 rectclip
gsave
[1 0 0 -1 117 488] concat
73 execuserobject setfont
0 setgray
6 9 moveto (7) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
130 471 31 22 rectclip
gsave
[1 0 0 -1 135 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (10) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
150 471 31 22 rectclip
gsave
[1 0 0 -1 155 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (13) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
170 471 31 22 rectclip
gsave
[1 0 0 -1 175 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (16) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
190 471 31 22 rectclip
gsave
[1 0 0 -1 195 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (19) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
209 471 31 22 rectclip
gsave
[1 0 0 -1 214 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (22) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
229 471 31 22 rectclip
gsave
[1 0 0 -1 234 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (25) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
249 471 24 22 rectclip
gsave
[1 0 0 -1 254 488] concat
73 execuserobject setfont
0 setgray
5 9 moveto (28) show
grestore
grestore
0 setgray
0 0 1 setup2
0 setgray
gsave 84 493 84 0 add 493 159 add l grestore
/Helvetica 9 selectfont
0 setgray
0 0 1 setup2
0 0 1 setup2
gsave
62 482 21 22 rectclip
gsave
[1 0 0 -1 67 499] concat
73 execuserobject setfont
0 setgray
2 9 moveto (0) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
57 513 26 22 rectclip
gsave
[1 0 0 -1 62 530] concat
73 execuserobject setfont
0 setgray
2 9 moveto (50) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
52 545 31 22 rectclip
gsave
[1 0 0 -1 57 562] concat
73 execuserobject setfont
0 setgray
2 9 moveto (100) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
52 577 31 22 rectclip
gsave
[1 0 0 -1 57 594] concat
73 execuserobject setfont
0 setgray
2 9 moveto (150) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
52 609 31 22 rectclip
gsave
[1 0 0 -1 57 626] concat
73 execuserobject setfont
0 setgray
2 9 moveto (200) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
52 641 31 22 rectclip
gsave
[1 0 0 -1 57 658] concat
73 execuserobject setfont
0 setgray
2 9 moveto (250) show
grestore
grestore
0 setgray
0 setlinewidth
gsave
newpath
systemdict
begin
-1000 -1000 10000 10000 setbbox
79 493 moveto
5 0 rlineto
79 524.799988 moveto
5 0 rlineto
79 556.599976 moveto
5 0 rlineto
79 588.400024 moveto
5 0 rlineto
79 620.200012 moveto
5 0 rlineto
79 652 moveto
5 0 rlineto
end
stroke
grestore
0 setgray
gsave
0 0 278 672 rectclip
[1 0 0 -1 0 672] concat
0.333333 setgray
grestore
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
%%Trailer
